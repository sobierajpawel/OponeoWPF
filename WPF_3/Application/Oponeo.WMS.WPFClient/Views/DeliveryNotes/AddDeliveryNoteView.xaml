<UserControl x:Class="Oponeo.WMS.WPFClient.Views.DeliveryNotes.AddDeliveryNoteView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Oponeo.WMS.WPFClient.Views.DeliveryNotes"
             xmlns:converters="clr-namespace:Oponeo.WMS.WPFClient.Converters"
             xmlns:validationRules="clr-namespace:Oponeo.WMS.WPFClient.ValidationRules"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors="clr-namespace:Oponeo.WMS.WPFClient.Behavior"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:InvertBooleanToVisibilityConverter x:Key="InvertBooleanToVisibilityConverter"/>
            <converters:DateSmallerThanNowConverter x:Key="DateSmallerThanNowConverter"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Oponeo.WMS.WPFClient;component/Resources/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" FontSize="18" FontWeight="Bold" Content="Add delivery form"/>

        <Label Margin="0,10,0,0" Grid.Row="1" Grid.Column="0" Content="Document number"/>
        <Label Margin="0,10,0,0" Grid.Row="2" Grid.Column="0">Document date</Label>
        <Label Margin="0,10,0,0" Grid.Row="3" Grid.Column="0">Document description</Label>
        <Label Margin="0,10,0,0" Grid.Row="4" Grid.Column="0">
            <Label.Content>Selected customer</Label.Content>
        </Label>

        <TextBox Style="{StaticResource ValidatedTextBox}" Margin="0,10,0,0"  Grid.Column="1" Grid.Row="1" 
                 IsEnabled="{Binding DocumentDate, Converter={StaticResource DateSmallerThanNowConverter}}">
            <TextBox.Text>
                <Binding Path="DocumentNumber" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                    <Binding.ValidationRules>
                        <validationRules:DocumentNumberValidator/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <DatePicker Margin="0,10,0,0"  Grid.Column="1" Grid.Row="2" SelectedDate="{Binding DocumentDate}">
            <DatePicker.Style>
                <Style TargetType="{x:Type DatePicker}">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SelectedCustomer.IsActive}" Value="True"/>
                                <!--<Condition Binding="{Binding DocumentNumber}" Value="Test"/>-->
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--<DataTrigger Binding="{Binding SelectedCustomer.IsActive}" Value="True">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>-->
                    </Style.Triggers>
                </Style>
            </DatePicker.Style>
        </DatePicker>
        <TextBox Margin="0,10,0,0"  Grid.Column="1" Grid.Row="3" Text="{Binding Description, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
            <i:Interaction.Behaviors>
                <behaviors:LoadOnFocusBehavior/>
            </i:Interaction.Behaviors>
            <TextBox.Style>
                <Style BasedOn="{StaticResource ValidatedTextBox}" TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="GotFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color" To="AntiqueWhite" Duration="0:0:0.85"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="LostFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color" To="White" Duration="0:0:0.85"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <ComboBox Margin="0,10,0,0" DisplayMemberPath="Name"  Grid.Column="1" Grid.Row="4" ItemsSource="{Binding Customers}" SelectedItem="{Binding SelectedCustomer}"/>

        <StackPanel Visibility="{Binding IsActiveCustomer, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Row="5" Grid.ColumnSpan="2" Margin="40,30,40,0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Command="{Binding SaveCommand}" CommandParameter="Mouse" Content="Save"></Button>
                <Button Margin="20,0,0,0" Command="{Binding SetDefaultCommand}" Content="Set default"></Button>
            </StackPanel>
        </StackPanel>

        <Label Grid.Row="6" Grid.ColumnSpan="2" HorizontalAlignment="Center" Foreground="Red"
                Content="The selected customer is not active" Visibility="{Binding IsActiveCustomer, Converter={StaticResource InvertBooleanToVisibilityConverter}}"/>

    </Grid>
</UserControl>
